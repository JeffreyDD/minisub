- name: Configure system for minisub
  hosts: localhost
  become: true
  vars:
    packages:
    - openssh-server
    - ansible
    - docker.io
    - docker-compose
    - curl 
    - gnupg
    - lsb-release
    desktop_packages:
    - mate-desktop
    - terminator
  tasks:

  - name: Configure passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: Update apt packages
    apt:
      name: "*"
      state: latest
      update_cache: true

  - name: Install system packages {{ packages | join(', ') }}
    apt:
      state: present
      name: "{{ packages }}"

  - name: Install system packages {{ desktop_packages | join(', ') }}
    when: desktop | default(False) == True
    apt:
      state: present
      name: "{{ desktop_packages }}"


- name: Install ROS environment using system packages
  hosts: localhost
  become: true
  vars:
    ros_version: "{{ ros_distro | default('galactic') }}"
    ros_packages:
    - ros-{{ ros_version }}-key-teleop
    - ros-{{ ros_version }}-turtlesim
    - ros-{{ ros_version }}-turtle-tf2-cpp
    - ros-{{ ros_version }}-tf2-tools 
    - ros-{{ ros_version }}-tf-transformations
    ros_desktop_packages:
    - ros-{{ ros_version }}-desktop
    - ros-{{ ros_version }}-joy-teleop
    ros_key_url: https://raw.githubusercontent.com/ros/rosdistro/master/ros.key
    ros_keyring: /usr/share/keyrings/ros-archive-keyring.gpg
  tasks:

  - name: Add ROS apt key to keyring file
    apt_key:
      url: "{{ ros_key_url }}"
      keyring: "{{ ros_keyring }}"
      state: present

  - name: Add ROS apt repository
    vars:
      arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }}"
    apt_repository:
      repo: "deb [arch={{arch}} signed-by={{ ros_keyring }}] http://packages.ros.org/ros2/ubuntu {{ hostvars[inventory_hostname]['ansible_facts']['distribution_release'] }} main"
      state: present
  
  - name: Install ROS apt packages {{ ros_packages | join(', ') }}
    apt:
      state: present
      name: "{{ ros_packages }}"

  - name: Install ROS desktop apt packages {{ ros_desktop_packages | join(', ') }}
    when: desktop | default(False) == True
    apt:
      state: present
      name: "{{ ros_desktop_packages }}"