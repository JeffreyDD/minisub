- name: Configure system for minisub
  hosts: localhost
  become: true
  vars:
    packages:
    - openssh-server
    - ansible
    - docker.io
    - docker-compose
    - curl 
    - gnupg
    - lsb-release
    - nmap
    - python3-pip
    desktop_packages:
    - ubuntu-mate-desktop
    - terminator
    username: minisub
  tasks:

  - name: Configure passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: Update apt packages
    apt:
      name: "*"
      state: latest
      update_cache: true

  - name: Install system packages {{ packages | join(', ') }}
    apt:
      state: present
      name: "{{ packages }}"

  - name: Install system packages {{ desktop_packages | join(', ') }}
    when: desktop | default(False) == "true"
    apt:
      state: present
      name: "{{ desktop_packages }}"

  - name: Add minisub user to docker group
    user: 
      name: "{{ username }}"
      groups: docker
      append: yes

  - name: Configure interfaces through netplan
    when: networking | default(False) == "true"
    notify:
    - netplan apply
    copy:
      dest: /etc/netplan/50-cloud-init.yaml
      content: |
        network:
          version: 2
          wifis:
            renderer: networkd
            wlan0:
              optional: true
              access-points:
                JDD MiniSub:
                  password: 0741aa060fe072459845f5d0245b7800de1a33ef069cd6ebc2210f9b1b2de4da
              dhcp4: false
              addresses: [10.0.2.85/24]
              gateway4: 10.0.2.1
              nameservers:
                addresses: [8.8.8.8,8.8.4.4]
          ethernets:
            renderer: networkd
            eth0:
              dhcp4: true

  handlers:

  - name: netplan apply
    become: true
    shell: netplan apply


- name: Install ROS environment using system packages
  hosts: localhost
  become: true
  vars:
    ros_version: "{{ ros_distro | default('galactic') }}"
    ros_packages:
    - ros-{{ ros_version }}-ros-base
    - ros-{{ ros_version }}-key-teleop
    - ros-{{ ros_version }}-teleop-twist-keyboard
    - ros-{{ ros_version }}-turtlesim
    - ros-{{ ros_version }}-turtle-tf2-cpp
    - ros-{{ ros_version }}-tf2-tools 
    - ros-{{ ros_version }}-tf-transformations
    - ros-{{ ros_version }}-joy
    - ros-{{ ros_version }}-joy-teleop
    - ros-{{ ros_version }}-teleop-twist-joy
    ros_desktop_packages:
    - ros-{{ ros_version }}-desktop
    ros_key_url: https://raw.githubusercontent.com/ros/rosdistro/master/ros.key
    ros_keyring: /usr/share/keyrings/ros-archive-keyring.gpg
  tasks:

  - name: Add ROS apt key to keyring file
    apt_key:
      url: "{{ ros_key_url }}"
      keyring: "{{ ros_keyring }}"
      state: present

  - name: Add ROS apt repository
    vars:
      arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }}"
    apt_repository:
      repo: "deb [arch={{arch}} signed-by={{ ros_keyring }}] http://packages.ros.org/ros2/ubuntu {{ hostvars[inventory_hostname]['ansible_facts']['distribution_release'] }} main"
      state: present
  
  - name: Install ROS apt packages {{ ros_packages | join(', ') }}
    apt:
      state: present
      name: "{{ ros_packages }}"

  - name: Install ROS desktop apt packages {{ ros_desktop_packages | join(', ') }}
    when: desktop | default(False) == "true"
    apt:
      state: present
      name: "{{ ros_desktop_packages }}"


- name: Setup Bluetooth for RasPI on Ubuntu Server
  hosts: localhost
  become: true
  when: 'raspi' in ansible_kernel
  tasks:

  - name: Ensure proper Pi bluetooth package is installed 
    apt:
      state: present
      name: pi-bluetooth
    
  - name: Add minisub user to docker group
    user: 
      name: "{{ username }}"
      groups: bluetooth
      append: yes

  - name: Add bluetooth to kernel config
    lineinfile:
      path: /boot/firmware/usercfg.txt
      line: include btcfg.txt

  - name: Install evdev from pip to allow testing
    pip:
      state: present
      name: evdev


- name: Setup VirtualBox guest additions
  hosts: localhost
  become: true
  when: ansible_virtualization_type = 'virtualbox'
  pre_tasks:
  - shell: ansible-galaxy install PeterMosmans.virtualbox-guest
  roles:
  - role: PeterMosmans.virtualbox-guest
